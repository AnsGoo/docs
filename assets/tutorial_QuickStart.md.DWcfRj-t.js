import{_ as e}from"./chunks/006.CEryg7gQ.js";import{_ as a,c as o,o as s,a3 as t}from"./chunks/framework.Cy_X8JXl.js";const i="/docs/assets/005.5U5OB19c.png",d="/docs/assets/007.DxwUNbbK.png",c="/docs/assets/008.BDehbM-R.png",l="/docs/assets/010.Cehy7kre.mp4",p="/docs/assets/011.BH1AWzLJ.mp4",r="/docs/assets/012.2_PKrIcq.mp4",h="/docs/assets/014.BABQxuDs.png",n="/docs/assets/020.CQkVtPmY.mp4",u="/docs/assets/021.BTU6Cmw7.mp4",m="/docs/assets/022.CkvsXcxO.mp4",k="/docs/assets/023.Ce02aj95.mp4",b="/docs/assets/024.D0-R7BUO.mp4",_="/docs/assets/025.BakyKmgB.mp4",v="/docs/assets/026.CpcCmLlX.mp4",g="/docs/assets/027.CcsVx2CY.mp4",y="/docs/assets/028.mfqudu0a.mp4",q="/docs/assets/029.kKFF_lfq.mp4",V=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"tutorial/QuickStart.md","filePath":"tutorial/QuickStart.md"}'),F={name:"tutorial/QuickStart.md"},f=t(`<p>快速创建一个属于自己的页面并发布</p><h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><p>接下来我们将带领大家创建一个页面，来熟悉该低代码平台的使用</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/AnsGoo/openDataV.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h2 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">​</a></h2><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h1 id="访问布局管理" tabindex="-1">访问布局管理 <a class="header-anchor" href="#访问布局管理" aria-label="Permalink to &quot;访问布局管理&quot;">​</a></h1><div class="language-Bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/Pages</span></span></code></pre></div><p><img src="`+i+'" alt="管理页面"></p><p>当前会展示出项目已有的页面，你可以点击页面卡片进行查看，也可以对已有页面进行二次编辑，还可以自己新创建一个页面</p><h2 id="打开创建页面" tabindex="-1">打开创建页面 <a class="header-anchor" href="#打开创建页面" aria-label="Permalink to &quot;打开创建页面&quot;">​</a></h2><p>点击<code>新建按钮</code>号会自动进入<code>创建</code>页面</p><p><img src="'+e+'" alt="create"></p><p>整个页面被分为：</p><ul><li>顶部的<code>工具栏</code>： 常用工具按钮</li><li>左侧的<code>资源栏</code>： 组件和图层</li><li>右侧的<code>属性栏</code>： 属性分为组件属性和画布属性</li><li>底部的<code>状态栏</code>： 创建页面的状态</li><li>中间的<code>画布</code>： 承载组件的最顶层容器</li></ul><p>接下来我们将开始创建一个页面</p><h1 id="添加第一组件" tabindex="-1">添加第一组件 <a class="header-anchor" href="#添加第一组件" aria-label="Permalink to &quot;添加第一组件&quot;">​</a></h1><p>我们设计一个<code>HelloWord</code>文本页面</p><h2 id="拖动组件" tabindex="-1">拖动组件 <a class="header-anchor" href="#拖动组件" aria-label="Permalink to &quot;拖动组件&quot;">​</a></h2><p>我们在左侧<code>资源栏</code>的组件中找到<code>柱状图</code>-&gt;<code>基础柱状图</code>组件，并将其拖动到画布中央，并单击鼠标左键选中组件</p><p><img src="'+d+'" alt="text"></p><h2 id="修改组件属性" tabindex="-1">修改组件属性 <a class="header-anchor" href="#修改组件属性" aria-label="Permalink to &quot;修改组件属性&quot;">​</a></h2><p>修改组件下列属性</p><ul><li>数据配置的大值为<code>70</code></li><li>坐标轴配置的X网格线<code>不显示</code></li><li>坐标轴配置的轴线颜色为 <code>#18A058</code></li></ul><p><img src="'+c+'" alt="text"></p><p>同时我们可以对组件进行<code>拖动</code>、<code>旋转</code>、<code>拉伸</code></p><video muted autoplay="true" loop="true"><source src="'+l+'" type="video/mp4"></video><h2 id="配置组件数据" tabindex="-1">配置组件数据 <a class="header-anchor" href="#配置组件数据" aria-label="Permalink to &quot;配置组件数据&quot;">​</a></h2><p>将组件的示例数据改为静态数据，切换组件数据类型，这里我们选择静态数据,并选择具体的静态数据</p><video muted autoplay="true" loop="true"><source src="'+p+'" type="video/mp4"></video><h2 id="修改组件样式" tabindex="-1">修改组件样式 <a class="header-anchor" href="#修改组件样式" aria-label="Permalink to &quot;修改组件样式&quot;">​</a></h2><p>所有的组件都有<code>位置大小</code>的公共样式，主要是用来设置组件的<code>坐标</code>、<code>尺寸</code>和<code>旋转</code>情况，你除过可以通过<code>拉伸</code>、<code>拖动</code>、<code>旋转</code>组件本身来改变这些值以外，还可以通过公共样式<code>位置大小</code>来精确更改。 这里我让将组件旋转状态改为0</p><video muted autoplay="true" loop="true"><source src="'+r+'" type="video/mp4"></video><h1 id="组件间的操作" tabindex="-1">组件间的操作 <a class="header-anchor" href="#组件间的操作" aria-label="Permalink to &quot;组件间的操作&quot;">​</a></h1><p>我们向画布中追加一个边框组件</p><p><img src="'+h+'" alt="imag"></p><h2 id="选中" tabindex="-1">选中 <a class="header-anchor" href="#选中" aria-label="Permalink to &quot;选中&quot;">​</a></h2><p>这里我们通过框选，选中<code>边框</code>和<code>柱状图</code></p><ul><li>框选</li></ul><video muted autoplay="true" loop="true"><source src="'+n+'" type="video/mp4"></video><ul><li>ctr + &#39;鼠标单击&#39;</li></ul><video muted autoplay="true" loop="true"><source src="'+u+'" type="video/mp4"></video><ul><li>通过图层选中</li></ul><video muted autoplay="true" loop="true"><source src="'+m+'" type="video/mp4"></video><h2 id="组合" tabindex="-1">组合 <a class="header-anchor" href="#组合" aria-label="Permalink to &quot;组合&quot;">​</a></h2><p>在选中框上右击组合进行组件的组合，这时候两个或者多个组件就被变成一个<code>分组</code>组件</p><video muted autoplay="true" loop="true"><source src="'+k+'" type="video/mp4"></video><h2 id="拆分" tabindex="-1">拆分 <a class="header-anchor" href="#拆分" aria-label="Permalink to &quot;拆分&quot;">​</a></h2><p>我们也可以通过选中分组组件，然后鼠标右击对<code>分组</code>组件进行<code>拆分</code></p><video muted autoplay="true" loop="true"><source src="'+b+'" type="video/mp4"></video><h1 id="图层编辑" tabindex="-1">图层编辑 <a class="header-anchor" href="#图层编辑" aria-label="Permalink to &quot;图层编辑&quot;">​</a></h1><p>图层是组件的层级关系，越是靠近顶层的组件图层级别越高，组件图层级别高的可以遮盖图层级别低的组件，图层级别高低关系着组件的渲染顺序，从而影响用户页面的<code>视觉效果</code>(比如一张图片覆盖了另一张图片)和<code>交互效果</code>(点击效果无法触发)等；点击左侧<code>资源栏</code>一列的图层即可看到我们画图中所有组件之间的图层关系，默认组件的名称就是图层的名称。</p><h2 id="更名" tabindex="-1">更名 <a class="header-anchor" href="#更名" aria-label="Permalink to &quot;更名&quot;">​</a></h2><p>选中组件之后，每一个组件的都有属性一栏都有一个<code>公共属性</code>,可以通过更改<code>公共属性</code>的<code>名称</code>一栏来修改图层名称</p><h2 id="移动" tabindex="-1">移动 <a class="header-anchor" href="#移动" aria-label="Permalink to &quot;移动&quot;">​</a></h2><p>可以通过选中组件来，然后鼠标右击菜单栏里面的<code>置顶</code>、<code>上移一层</code>、<code>置底</code>、<code>下移一层</code>来更改组件的图层顺序</p><video muted autoplay="true" loop="true"><source src="'+_+'" type="video/mp4"></video><p>也可以通过<code>图层</code>一栏，鼠标右击的菜单栏里面的<code>置顶</code>、<code>上移一层</code>、<code>置底</code>、<code>下移一层</code>来更改组件的图层顺序</p><video muted autoplay="true" loop="true"><source src="'+v+'" type="video/mp4"></video><p>还可以通过拖动组件到对应的位置来修改图层顺序</p><video muted autoplay="true" loop="true"><source src="'+g+'" type="video/mp4"></video><h2 id="隐藏、显示" tabindex="-1">隐藏、显示 <a class="header-anchor" href="#隐藏、显示" aria-label="Permalink to &quot;隐藏、显示&quot;">​</a></h2><p>在<code>图层</code>一栏，通过在图层上鼠标右击菜单栏里面的<code>显示</code>\\<code>隐藏</code>来显示或者隐藏组件,需要注意的是显示或者隐藏组件只是在画图中组件较多时，通过隐藏组件来减少画布中组件数量，便于用户编辑组件，在非编辑模式下无任何效果，只对编辑模式有效</p><h1 id="修改画布" tabindex="-1">修改画布 <a class="header-anchor" href="#修改画布" aria-label="Permalink to &quot;修改画布&quot;">​</a></h1><h2 id="分辨率" tabindex="-1">分辨率 <a class="header-anchor" href="#分辨率" aria-label="Permalink to &quot;分辨率&quot;">​</a></h2><p>我们支持针对不同的分辨率的设备，当设备分辨率比差异较大的情况下，可以通过指定分辨率使设计出来的页面达到最好的效果</p><h2 id="页面背景" tabindex="-1">页面背景 <a class="header-anchor" href="#页面背景" aria-label="Permalink to &quot;页面背景&quot;">​</a></h2><p>默认页面使背景色，我们支持页面修改为<code>背景色</code>、<code>渐变色</code>、<code>背景图</code></p><video muted autoplay="true" loop="true"><source src="'+y+'" type="video/mp4"></video><h1 id="预览并发布" tabindex="-1">预览并发布 <a class="header-anchor" href="#预览并发布" aria-label="Permalink to &quot;预览并发布&quot;">​</a></h1><p>当我们完成页面的设计，我们可以通过<code>工具栏</code>里面的预览按钮去预览一下页面效果效果，也可以通过<code>保存</code>按钮来保存我们的页面，还可以通过<code>导出</code>按钮将我们页面设计在本地进行保存。</p><video muted autoplay="true" loop="true"><source src="'+q+'" type="video/mp4"></video><p>至此一个简单的页面就设计完成了！</p>',76),C=[f];function B(x,P,E,S,A,D){return s(),o("div",null,C)}const K=a(F,[["render",B]]);export{V as __pageData,K as default};
